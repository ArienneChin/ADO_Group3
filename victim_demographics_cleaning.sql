USE WAREHOUSE TRANSFER_ADO_ASSIGNMENT2_GROUP3;
USE DATABASE ADO_ASSIGNMENT2_GROUP3;
USE SCHEMA RAW_DATASET;

CREATE OR REPLACE TABLE VIOLENCE_REDUCTION_VICTIMDEMO_CLEANED AS
SELECT 
    TIME_PERIOD,
    TIME_PERIOD_START,
    TIME_PERIOD_END,
    -- Normalize PRIMARY_TYPE values
    CASE 
        WHEN LOWER(PRIMARY_TYPE) LIKE '%homicide%' THEN 'HOMICIDE'
        WHEN LOWER(PRIMARY_TYPE) LIKE '%assault%' THEN 'ASSAULT'
        WHEN LOWER(PRIMARY_TYPE) LIKE '%robbery%' THEN 'ROBBERY'
        WHEN LOWER(PRIMARY_TYPE) LIKE '%battery%' THEN 'BATTERY'
        ELSE UPPER(PRIMARY_TYPE) -- Standardize to UPPERCASE
    END AS PRIMARY_TYPE,
    AGE,
    COALESCE(SEX, 'UNKNOWN') AS SEX, -- Handle missing values
    COALESCE(RACE, 'UNKNOWN') AS RACE, -- Handle missing values
    COALESCE(JUVENILE_I, FALSE) AS JUVENILE_I, -- Default missing to FALSE
    COALESCE(DOMESTIC_I, FALSE) AS DOMESTIC_I, -- Default missing to FALSE
    COALESCE(GUNSHOT_INJURY_I, 'UNKNOWN') AS GUNSHOT_INJURY_I, -- Handle missing values
    COALESCE(NUMBER_OF_VICTIMS, 0) AS NUMBER_OF_VICTIMS -- Default missing to 0
FROM (
    -- Remove Duplicate Records
    SELECT *,
        ROW_NUMBER() OVER (
            PARTITION BY 
                TIME_PERIOD, PRIMARY_TYPE, AGE, SEX, RACE, DOMESTIC_I 
            ORDER BY TIME_PERIOD_START DESC
        ) AS RN
    FROM violence_reduction_victimdemo_raw
) CLEANED_DUPLICATES
WHERE RN = 1;

-- Data Validation to Check for Missing Critical Fields
SELECT *
FROM VIOLENCE_REDUCTION_VICTIMDEMO_CLEANED
WHERE PRIMARY_TYPE IS NULL 
   OR AGE IS NULL 
   OR SEX IS NULL 
   OR RACE IS NULL;
